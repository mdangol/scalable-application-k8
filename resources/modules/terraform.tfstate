{
  "version": 4,
  "terraform_version": "0.14.2",
  "serial": 30,
  "lineage": "ed47f114-4722-419e-4e5a-80eb5d2e88f7",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "demo-vpc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": null,
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:629150534577:stack/demo-vpc/58961c10-3d51-11eb-b92d-125ba4d329dd",
            "name": "demo-vpc",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "NoIngressSecurityGroup": "sg-04ae9935979c6286f",
              "PrivateSubnet1": "subnet-0a5a7db0c338cc269",
              "PrivateSubnet2": "subnet-051806cc0151e1356",
              "PrivateSubnets": "subnet-0a5a7db0c338cc269,subnet-051806cc0151e1356",
              "PublicSubnet1": "subnet-04220dd9a5c65482b",
              "PublicSubnet2": "subnet-0112a142c647b10d8",
              "PublicSubnets": "subnet-04220dd9a5c65482b,subnet-0112a142c647b10d8",
              "VPC": "vpc-05a8cb1dcceb1c863"
            },
            "parameters": {
              "EnvironmentName": "sbx",
              "PrivateSubnet1CIDR": "10.0.2.0/24",
              "PrivateSubnet2CIDR": "10.0.3.0/24",
              "PublicSubnet1CIDR": "10.0.0.0/24",
              "PublicSubnet2CIDR": "10.0.1.0/24",
              "VpcCIDR": "10.0.0.0/16"
            },
            "policy_body": null,
            "policy_url": null,
            "tags": null,
            "template_body": "Description:  This template deploys a VPC, with a pair of public and private subnets spread\n  across two Availability Zones. It deploys an internet gateway, with a default\n  route on the public subnets. It deploys a pair of NAT gateways (one in each AZ),\n  and default routes for them in the private subnets.\n\nParameters:\n  EnvironmentName:\n    Description: An environment name that is prefixed to resource names\n    Type: String\n\n  VpcCIDR:\n    Description: Please enter the IP range (CIDR notation) for this VPC\n    Type: String\n    Default: 10.192.0.0/16\n\n  PublicSubnet1CIDR:\n    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone\n    Type: String\n    Default: 10.192.10.0/24\n\n  PublicSubnet2CIDR:\n    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone\n    Type: String\n    Default: 10.192.11.0/24\n\n  PrivateSubnet1CIDR:\n    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone\n    Type: String\n    Default: 10.192.20.0/24\n\n  PrivateSubnet2CIDR:\n    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone\n    Type: String\n    Default: 10.192.21.0/24\n\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock: !Ref VpcCIDR\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n        - Key: Name\n          Value: !Ref EnvironmentName\n\n  InternetGateway:\n    Type: AWS::EC2::InternetGateway\n    Properties:\n      Tags:\n        - Key: Name\n          Value: !Ref EnvironmentName\n\n  InternetGatewayAttachment:\n    Type: AWS::EC2::VPCGatewayAttachment\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n\n  PublicSubnet1:\n    Type: AWS::EC2::Subnet\n    Properties:\n      VpcId: !Ref VPC\n      AvailabilityZone: !Select [ 0, !GetAZs '' ]\n      CidrBlock: !Ref PublicSubnet1CIDR\n      MapPublicIpOnLaunch: true\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)\n\n  PublicSubnet2:\n    Type: AWS::EC2::Subnet\n    Properties:\n      VpcId: !Ref VPC\n      AvailabilityZone: !Select [ 1, !GetAZs  '' ]\n      CidrBlock: !Ref PublicSubnet2CIDR\n      MapPublicIpOnLaunch: true\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)\n\n  PrivateSubnet1:\n    Type: AWS::EC2::Subnet\n    Properties:\n      VpcId: !Ref VPC\n      AvailabilityZone: !Select [ 0, !GetAZs  '' ]\n      CidrBlock: !Ref PrivateSubnet1CIDR\n      MapPublicIpOnLaunch: false\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)\n\n  PrivateSubnet2:\n    Type: AWS::EC2::Subnet\n    Properties:\n      VpcId: !Ref VPC\n      AvailabilityZone: !Select [ 1, !GetAZs  '' ]\n      CidrBlock: !Ref PrivateSubnet2CIDR\n      MapPublicIpOnLaunch: false\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)\n\n  NatGateway1EIP:\n    Type: AWS::EC2::EIP\n    DependsOn: InternetGatewayAttachment\n    Properties:\n      Domain: vpc\n\n  NatGateway2EIP:\n    Type: AWS::EC2::EIP\n    DependsOn: InternetGatewayAttachment\n    Properties:\n      Domain: vpc\n\n  NatGateway1:\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt NatGateway1EIP.AllocationId\n      SubnetId: !Ref PublicSubnet1\n\n  NatGateway2:\n    Type: AWS::EC2::NatGateway\n    Properties:\n      AllocationId: !GetAtt NatGateway2EIP.AllocationId\n      SubnetId: !Ref PublicSubnet2\n\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName} Public Routes\n\n  DefaultPublicRoute:\n    Type: AWS::EC2::Route\n    DependsOn: InternetGatewayAttachment\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: 0.0.0.0/0\n      GatewayId: !Ref InternetGateway\n\n  PublicSubnet1RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      SubnetId: !Ref PublicSubnet1\n\n  PublicSubnet2RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      SubnetId: !Ref PublicSubnet2\n\n\n  PrivateRouteTable1:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName} Private Routes (AZ1)\n\n  DefaultPrivateRoute1:\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable1\n      DestinationCidrBlock: 0.0.0.0/0\n      NatGatewayId: !Ref NatGateway1\n\n  PrivateSubnet1RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable1\n      SubnetId: !Ref PrivateSubnet1\n\n  PrivateRouteTable2:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName} Private Routes (AZ2)\n\n  DefaultPrivateRoute2:\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable2\n      DestinationCidrBlock: 0.0.0.0/0\n      NatGatewayId: !Ref NatGateway2\n\n  PrivateSubnet2RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      RouteTableId: !Ref PrivateRouteTable2\n      SubnetId: !Ref PrivateSubnet2\n\n  NoIngressSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupName: \"no-ingress-sg\"\n      GroupDescription: \"Security group with no ingress rule\"\n      VpcId: !Ref VPC\n\nOutputs:\n  VPC:\n    Description: A reference to the created VPC\n    Value: !Ref VPC\n    Export:\n      Name: !Sub \"${AWS::StackName}-VPCID\"\n\n  PublicSubnets:\n    Description: A list of the public subnets\n    Value: !Join [ \",\", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]\n\n  PrivateSubnets:\n    Description: A list of the private subnets\n    Value: !Join [ \",\", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]\n\n  PublicSubnet1:\n    Description: A reference to the public subnet in the 1st Availability Zone\n    Value: !Ref PublicSubnet1\n\n  PublicSubnet2:\n    Description: A reference to the public subnet in the 2nd Availability Zone\n    Value: !Ref PublicSubnet2\n\n  PrivateSubnet1:\n    Description: A reference to the private subnet in the 1st Availability Zone\n    Value: !Ref PrivateSubnet1\n\n  PrivateSubnet2:\n    Description: A reference to the private subnet in the 2nd Availability Zone\n    Value: !Ref PrivateSubnet2\n\n  NoIngressSecurityGroup:\n    Description: Security group with no ingress rule\n    Value: !Ref NoIngressSecurityGroup",
            "template_url": null,
            "timeout_in_minutes": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19"
        }
      ]
    }
  ]
}
